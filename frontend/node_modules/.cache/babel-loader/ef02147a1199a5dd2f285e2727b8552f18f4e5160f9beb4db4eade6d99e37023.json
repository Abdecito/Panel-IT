{"ast":null,"code":"var _jsxFileName = \"/home/panel-it/frontend/src/Panel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Panel() {\n  _s();\n  const [servidores, setServidores] = useState([]);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  const usuario = token ? jwtDecode(token) : null;\n  const [eventos, setEventos] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/api/servidores\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setServidores(res.data)).catch(err => console.error(\"Error al obtener servidores:\", err));\n  }, []);\n\n  // Función para cerrar sesión\n  // Elimina el token del localStorage y redirige al login\n\n  const cerrarSesion = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  // Función para apagar un servidor\n  const apagarServidor = id => {\n    var _servidores$find;\n    const nombreServidor = (_servidores$find = servidores.find(s => s.id === id)) === null || _servidores$find === void 0 ? void 0 : _servidores$find.nombre;\n    setServidores(prev => prev.map(srv => srv.id === id ? {\n      ...srv,\n      estado: \"offline\"\n    } : srv));\n\n    // Añadir evento de apagado\n    setEventos(prev => [{\n      hora: new Date().toLocaleTimeString(),\n      mensaje: `🔴 ${nombreServidor} ha sido apagado`\n    }, ...prev]);\n  };\n  const encenderServidor = id => {\n    var _servidores$find2;\n    const nombreServidor = (_servidores$find2 = servidores.find(s => s.id === id)) === null || _servidores$find2 === void 0 ? void 0 : _servidores$find2.nombre;\n    setServidores(prev => prev.map(srv => srv.id === id ? {\n      ...srv,\n      estado: \"online\"\n    } : srv));\n    setEventos(prev => [{\n      hora: new Date().toLocaleTimeString(),\n      mensaje: `🟢 ${nombreServidor} ha sido encendido`\n    }, ...prev]);\n  };\n\n  // 🔁 Función para simular reinicio\n  const reiniciarServidor = id => {\n    var _servidores$find3;\n    const nombreServidor = (_servidores$find3 = servidores.find(s => s.id === id)) === null || _servidores$find3 === void 0 ? void 0 : _servidores$find3.nombre;\n    setServidores(prev => prev.map(srv => srv.id === id ? {\n      ...srv,\n      estado: \"Reiniciando...\"\n    } : srv));\n    // Limpiar historial de eventos\n    const limpiarEventos = () => {\n      setEventos([]);\n    };\n\n    // Añadir evento de reinicio\n    setEventos(prev => [{\n      hora: new Date().toLocaleTimeString(),\n      mensaje: `🔁 ${nombreServidor} se está reiniciando`\n    }, ...prev]);\n    setTimeout(() => {\n      setServidores(prev => prev.map(srv => srv.id === id ? {\n        ...srv,\n        estado: \"online\"\n      } : srv));\n      setEventos(prev => [{\n        hora: new Date().toLocaleTimeString(),\n        mensaje: `✅ ${nombreServidor} ha vuelto a estar online`\n      }, ...prev]);\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-blue-700 mb-1\",\n          children: \"Panel de Infraestructura IT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), usuario && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Bienvenido, \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: usuario.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cerrarSesion,\n        className: \"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded shadow\",\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), servidores.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: servidores.map(srv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: srv.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"IP:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 14\n            }, this), \" \", srv.ip]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: srv.estado === \"online\" ? \"text-green-600\" : \"text-yellow-600\",\n              children: srv.estado || \"desconocido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"CPU:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 14\n            }, this), \" \", srv.cpu]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"RAM:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 14\n            }, this), \" \", srv.ram]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Servicios:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside text-gray-700\",\n              children: srv.servicios.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: s\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => reiniciarServidor(srv.id),\n            className: \"mt-4 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\",\n            children: \"Reiniciar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, srv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Historial de eventos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEventos([]),\n            className: \"text-sm text-red-600 hover:text-red-800 underline\",\n            children: \"Limpiar historial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 3\n        }, this), eventos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"bg-white p-4 rounded shadow max-h-64 overflow-y-auto text-sm border\",\n          children: eventos.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 mr-2\",\n              children: [\"[\", e.hora, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 11\n            }, this), e.mensaje]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No hay eventos registrados a\\xFAn.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-center\",\n      children: \"Cargando servidores...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Panel, \"NF0Tn7gS6ktm1KNOcgh5SjpIsu0=\", false, function () {\n  return [useNavigate];\n});\n_c = Panel;\nexport default Panel;\n// Aquí se muestra el panel de usuario con la lista de servidores\n// y la opción de reiniciar cada uno. También se incluye un botón para cerrar sesión.\n// El componente utiliza el hook useEffect para obtener la lista de servidores\n// al cargar el componente y la función reiniciarServidor para simular el reinicio de un servidor.\n// Además, se utiliza el hook useNavigate de react-router-dom para redirigir al usuario\n// a la página de inicio de sesión al cerrar sesión.\n// El componente también muestra un mensaje de bienvenida al usuario\n// utilizando el token JWT decodificado para obtener su correo electrónico.\n// Se utiliza Tailwind CSS para el estilo de los componentes y la disposición de la página.\n// El componente maneja el estado de los servidores y su visualización\n// utilizando el hook useState, y se encarga de mostrar un mensaje de carga\n// mientras se obtienen los datos de los servidores desde el backend.\nvar _c;\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["React","useEffect","useState","axios","jwtDecode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Panel","_s","servidores","setServidores","navigate","token","localStorage","getItem","usuario","eventos","setEventos","get","headers","Authorization","then","res","data","catch","err","console","error","cerrarSesion","removeItem","apagarServidor","id","_servidores$find","nombreServidor","find","s","nombre","prev","map","srv","estado","hora","Date","toLocaleTimeString","mensaje","encenderServidor","_servidores$find2","reiniciarServidor","_servidores$find3","limpiarEventos","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","length","ip","cpu","ram","servicios","i","e","_c","$RefreshReg$"],"sources":["/home/panel-it/frontend/src/Panel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction Panel() {\n  const [servidores, setServidores] = useState([]);\n  const navigate = useNavigate();\n  \n  const token = localStorage.getItem(\"token\");\n  const usuario = token ? jwtDecode(token) : null;\n  const [eventos, setEventos] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/api/servidores\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => setServidores(res.data))\n      .catch((err) => console.error(\"Error al obtener servidores:\", err));\n  }, []);\n\n  // Función para cerrar sesión\n  // Elimina el token del localStorage y redirige al login\n  \n  const cerrarSesion = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n// Función para apagar un servidor\n  const apagarServidor = (id) => {\n    const nombreServidor = servidores.find((s) => s.id === id)?.nombre;\n  \n    setServidores((prev) =>\n      prev.map((srv) =>\n        srv.id === id ? { ...srv, estado: \"offline\" } : srv\n      )\n    );\n    \n// Añadir evento de apagado\n    setEventos((prev) => [\n      { hora: new Date().toLocaleTimeString(), mensaje: `🔴 ${nombreServidor} ha sido apagado` },\n      ...prev,\n    ]);\n  };\n  \n  const encenderServidor = (id) => {\n    const nombreServidor = servidores.find((s) => s.id === id)?.nombre;\n  \n    setServidores((prev) =>\n      prev.map((srv) =>\n        srv.id === id ? { ...srv, estado: \"online\" } : srv\n      )\n    );\n  \n    setEventos((prev) => [\n      { hora: new Date().toLocaleTimeString(), mensaje: `🟢 ${nombreServidor} ha sido encendido` },\n      ...prev,\n    ]);\n  };\n  \n\n\n  // 🔁 Función para simular reinicio\n  const reiniciarServidor = (id) => {\n    const nombreServidor = servidores.find((s) => s.id === id)?.nombre;\n  \n    setServidores((prev) =>\n      prev.map((srv) =>\n        srv.id === id ? { ...srv, estado: \"Reiniciando...\" } : srv\n      )\n    );\n  // Limpiar historial de eventos\n    const limpiarEventos = () => {\n      setEventos([]);\n    };  \n  \n    // Añadir evento de reinicio\n    setEventos((prev) => [\n      { hora: new Date().toLocaleTimeString(), mensaje: `🔁 ${nombreServidor} se está reiniciando` },\n      ...prev\n    ]);\n  \n    setTimeout(() => {\n      setServidores((prev) =>\n        prev.map((srv) =>\n          srv.id === id ? { ...srv, estado: \"online\" } : srv\n        )\n      );\n  \n      setEventos((prev) => [\n        { hora: new Date().toLocaleTimeString(), mensaje: `✅ ${nombreServidor} ha vuelto a estar online` },\n        ...prev\n      ]);\n    }, 3000);\n  };\n  \n\n  return (\n    <div className=\"p-6 min-h-screen bg-gray-100\">\n      <div className=\"flex justify-between items-start mb-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-blue-700 mb-1\">\n            Panel de Infraestructura IT\n          </h1>\n          {usuario && (\n            <p className=\"text-sm text-gray-600\">\n              Bienvenido, <span className=\"font-semibold\">{usuario.email}</span>\n            </p>\n          )}\n        </div>\n\n        <button\n          onClick={cerrarSesion}\n          className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded shadow\"\n        >\n          Cerrar sesión\n        </button>\n      </div>\n\n      {servidores.length > 0 ? (\n  <>\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {servidores.map((srv) => (\n        <div\n          key={srv.id}\n          className=\"bg-white p-4 rounded-lg shadow border border-gray-200\"\n        >\n          <h2 className=\"text-xl font-semibold mb-2\">{srv.nombre}</h2>\n          <p><strong>IP:</strong> {srv.ip}</p>\n          <p>\n            <strong>Estado:</strong>{\" \"}\n            <span className={srv.estado === \"online\" ? \"text-green-600\" : \"text-yellow-600\"}>\n              {srv.estado || \"desconocido\"}\n            </span>\n          </p>\n          <p><strong>CPU:</strong> {srv.cpu}</p>\n          <p><strong>RAM:</strong> {srv.ram}</p>\n          <div className=\"mt-2\">\n            <strong>Servicios:</strong>\n            <ul className=\"list-disc list-inside text-gray-700\">\n              {srv.servicios.map((s, i) => (\n                <li key={i}>{s}</li>\n              ))}\n            </ul>\n          </div>\n          <button\n            onClick={() => reiniciarServidor(srv.id)}\n            className=\"mt-4 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\"\n          >\n            Reiniciar\n          </button>\n        </div>\n      ))}\n    </div>\n\n    {/* Historial de eventos */}\n<div className=\"mt-12\">\n  <div className=\"flex justify-between items-center mb-2\">\n    <h2 className=\"text-xl font-bold\">Historial de eventos</h2>\n    <button\n      onClick={() => setEventos([])}\n      className=\"text-sm text-red-600 hover:text-red-800 underline\"\n    >\n      Limpiar historial\n    </button>\n  </div>\n\n  {eventos.length > 0 ? (\n    <ul className=\"bg-white p-4 rounded shadow max-h-64 overflow-y-auto text-sm border\">\n      {eventos.map((e, i) => (\n        <li key={i} className=\"mb-1\">\n          <span className=\"text-gray-500 mr-2\">[{e.hora}]</span>\n          {e.mensaje}\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-gray-500\">No hay eventos registrados aún.</p>\n  )}\n</div>\n\n  </>\n) : (\n  <p className=\"text-gray-500 text-center\">Cargando servidores...</p>\n)}\n    </div>\n  );\n}\n\nexport default Panel;\n// Aquí se muestra el panel de usuario con la lista de servidores\n// y la opción de reiniciar cada uno. También se incluye un botón para cerrar sesión.\n// El componente utiliza el hook useEffect para obtener la lista de servidores\n// al cargar el componente y la función reiniciarServidor para simular el reinicio de un servidor.\n// Además, se utiliza el hook useNavigate de react-router-dom para redirigir al usuario\n// a la página de inicio de sesión al cerrar sesión.\n// El componente también muestra un mensaje de bienvenida al usuario\n// utilizando el token JWT decodificado para obtener su correo electrónico.\n// Se utiliza Tailwind CSS para el estilo de los componentes y la disposición de la página.\n// El componente maneja el estado de los servidores y su visualización\n// utilizando el hook useState, y se encarga de mostrar un mensaje de carga\n// mientras se obtienen los datos de los servidores desde el backend.\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}