{"ast":null,"code":"// src/api.js\n\n// Importamos Axios, una librería para hacer peticiones HTTP\nimport axios from \"axios\";\n\n// Definimos la URL base para la API del backend\nconst API_URL = \"http://localhost:3001/api\";\n\n// Función para obtener la lista de servidores desde la API\nexport const getServidores = async token => {\n  const res = await axios.get(`${API_URL}/servidores`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    } // Enviamos el token JWT en el header\n  });\n  return res.data; // Devolvemos los datos de los servidores\n};\n\n// Función para encender un servidor simulado (por ID) a través de la API\nexport const encenderServidorAPI = async (id, token) => {\n  await axios.post(`${API_URL}/servidores/${id}/encender`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    } // Autenticación con token\n  });\n};\n\n// Función para apagar un servidor simulado (por ID) a través de la API\nexport const apagarServidorAPI = async (id, token) => {\n  await axios.post(`${API_URL}/servidores/${id}/apagar`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    } // Autenticación con token\n  });\n};","map":{"version":3,"names":["axios","API_URL","getServidores","token","res","get","headers","Authorization","data","encenderServidorAPI","id","post","apagarServidorAPI"],"sources":["/home/panel-it/frontend/src/api.js"],"sourcesContent":["// src/api.js\n\n// Importamos Axios, una librería para hacer peticiones HTTP\nimport axios from \"axios\";\n\n// Definimos la URL base para la API del backend\nconst API_URL = \"http://localhost:3001/api\";\n\n// Función para obtener la lista de servidores desde la API\nexport const getServidores = async (token) => {\n  const res = await axios.get(`${API_URL}/servidores`, {\n    headers: { Authorization: `Bearer ${token}` }, // Enviamos el token JWT en el header\n  });\n  return res.data; // Devolvemos los datos de los servidores\n};\n\n// Función para encender un servidor simulado (por ID) a través de la API\nexport const encenderServidorAPI = async (id, token) => {\n  await axios.post(`${API_URL}/servidores/${id}/encender`, {}, {\n    headers: { Authorization: `Bearer ${token}` }, // Autenticación con token\n  });\n};\n\n// Función para apagar un servidor simulado (por ID) a través de la API\nexport const apagarServidorAPI = async (id, token) => {\n  await axios.post(`${API_URL}/servidores/${id}/apagar`, {}, {\n    headers: { Authorization: `Bearer ${token}` }, // Autenticación con token\n  });\n};\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC5C,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,aAAa,EAAE;IACnDK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG,CAAC,CAAE;EACjD,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,EAAE,EAAEP,KAAK,KAAK;EACtD,MAAMH,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,eAAeS,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE;IAC3DJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG,CAAC,CAAE;EACjD,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOF,EAAE,EAAEP,KAAK,KAAK;EACpD,MAAMH,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,eAAeS,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE;IACzDJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG,CAAC,CAAE;EACjD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}